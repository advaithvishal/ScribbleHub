
# ScribbleHub

ScribbleHub is a simple blogging platform where users can explore articles related to different categories such as Health, Technology, and Travel. The application is built using core web technologies including HTML, CSS, and JavaScript. This document explains the concepts and technologies used in the application.

## Project Structure
The project contains the following main components:

### Root Directory
- **index.html**: The main entry point of the application. It serves as the homepage that welcomes users to the blog platform.
- **script.js**: JavaScript file that handles client-side logic, enabling dynamic interactivity on the homepage or across various sections.
- **styles.css**: Global CSS file that defines the look and feel of the website. This includes layout, typography, and other styling components.
- **images/**: A directory containing images associated with different posts across categories like technology, health, and travel.

### Posts Directory
- **category.css**: Contains specific styles related to different post categories like health, technology, or travel.
- **posts.html**: Displays a list of posts available in the application, organized under various categories.
- **posts.js**: Manages the dynamic rendering of posts, fetching post data, and handling user interactions such as sorting, searching, or filtering posts.

## Concepts and Technologies Used

### 1. HTML
ScribbleHub uses semantic HTML for structuring the web pages:
- **index.html** and other HTML files provide the structure for the content.
- Pages are divided into logical sections using appropriate tags, ensuring better accessibility and SEO optimization.

### 2. CSS
Styling in ScribbleHub is done through two primary stylesheets:
- **styles.css**: This file contains the global styles used across all pages. It uses CSS properties to define layout (flexbox, grid), colors, fonts, and responsive design principles.
- **category.css**: Specific styling for posts categorized under health, technology, or travel.
- The design is responsive, adapting to different screen sizes, making the blog mobile-friendly.

### 3. JavaScript
- **script.js**: Implements dynamic functionalities on the client-side such as loading additional content, managing events (like clicks or form submissions), and enhancing user interactions.
- **posts.js**: This file manages functionalities related to post interactions. It may involve fetching post data, rendering posts dynamically, enabling pagination or filtering based on categories.

### 4. Images
The **images/** directory contains high-quality images that are related to various blog posts. These images enhance the visual appeal and are specific to categories (Health, Technology, Travel).

## Features
- **Category-based Posts**: Users can explore articles categorized under Health, Technology, and Travel.
- **Responsive Design**: The application uses CSS media queries to ensure a consistent user experience on both mobile and desktop devices.
- **Dynamic Post Rendering**: JavaScript is used to dynamically display posts based on user interactions.

## How to Run the Project
1. Clone the repository.
   ```bash
   git clone <repository-url>
   ```
2. Navigate to the project directory.
   ```bash
   cd ScribbleHub-main
   ```
3. Open the `index.html` file in your browser to launch the application locally.

## Future Enhancements
- Integration with a back-end server to handle post creation, editing, and deletion.
- Search functionality to allow users to search for posts.
- Adding user authentication to enable user-specific features like creating or saving favorite posts.

